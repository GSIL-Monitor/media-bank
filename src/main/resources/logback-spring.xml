<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="false" scanPeriod="60 seconds" debug="false">
    <property name="log_dir" value="/home/java/logs/media-bank/" />
    <property name="log_long_history" value="30" /><!-- 5 days -->
    <property name="log_short_history" value="30" /><!-- 3 days -->
    <!-- [${webAppRootKey}] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] %-5p => %c.%M(%F:%L) - %m%n -->
    <property name="log_pattern" value="[storage] [%d{yyyy-MM-dd HH:mm:ss.SSS}] [%t] %-5p => %c - %m%n" />

    <!--  property name="log_pattern" value="storage %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %-5p => %c.%M(%F:%L) - %m%n%ex" /-->
    <property name="minIndex" value="1" />
    <property name="maxIndex" value="10" />
    <property name="maxFileSize" value="100MB" />

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- encoder的默认实现类是ch.qos.logback.classic.encoder.PatternLayoutEncoder -->
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 业务日志 -->
    <appender name="info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ALL</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <file>${log_dir}info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log_dir}info.log.%i</fileNamePattern>
            <minIndex>${minIndex}</minIndex>
            <maxIndex>${maxIndex}</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${maxFileSize}</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>${log_pattern}</pattern>
        </encoder>
    </appender>

    <!--重要日志-->
    <appender name="important" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ALL</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <file>${log_dir}important.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log_dir}important.log.%i</fileNamePattern>
            <minIndex>${minIndex}</minIndex>
            <maxIndex>${maxIndex}</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${maxFileSize}</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>${log_pattern}</pattern>
        </encoder>
    </appender>
    <logger name="important" level="ALL" additivity="false">
        <appender-ref ref="important" />
    </logger>

    <!-- 警告日志 -->
    <appender name="warn" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${log_dir}warn.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log_dir}warn.log.%i</fileNamePattern>
            <minIndex>${minIndex}</minIndex>
            <maxIndex>${maxIndex}</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${maxFileSize}</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>${log_pattern}</pattern>
            <immediateFlush>false</immediateFlush>
        </encoder>
    </appender>

    <!-- 错误日志 -->
    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <file>${log_dir}error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log_dir}error.log.%i</fileNamePattern>
            <minIndex>${minIndex}</minIndex>
            <maxIndex>${maxIndex}</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${maxFileSize}</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>${log_pattern}</pattern>
        </encoder>
    </appender>

    <!-- monitor -->
    <appender name="monitor" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log_dir}monitor.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log_dir}monitor.log.%i</fileNamePattern>
            <minIndex>${minIndex}</minIndex>
            <maxIndex>${maxIndex}</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${maxFileSize}</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>${log_pattern}</pattern>
        </encoder>
    </appender>
    <!-- task -->
    <appender name="task" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log_dir}task.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log_dir}task.log.%i</fileNamePattern>
            <minIndex>${minIndex}</minIndex>
            <maxIndex>${maxIndex}</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${maxFileSize}</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>${log_pattern}</pattern>
        </encoder>
    </appender>

    <!-- 统计日志 -->
    <appender name="statistic" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log_dir}statistics.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <fileNamePattern>${log_dir}statistics.log.%i</fileNamePattern>
            <minIndex>${minIndex}</minIndex>
            <maxIndex>${maxIndex}</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <maxFileSize>${maxFileSize}</maxFileSize>
        </triggeringPolicy>
        <encoder>
            <pattern>${log_pattern}</pattern>
        </encoder>
    </appender>

    <appender name="async-info" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>512</queueSize>
        <appender-ref ref="info" />
    </appender>

    <appender name="async-statistics" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>512</queueSize>
        <appender-ref ref="statistic" />
    </appender>

    <logger name="monitor" level="INFO" additivity="false">
        <appender-ref ref="monitor" />
    </logger>
    <logger name="task" level="INFO" additivity="false">
        <appender-ref ref="task" />
    </logger>
    <logger name="statistic" level="INFO" additivity="false">
        <appender-ref ref="statistic" />
    </logger>
    <logger name="async-statistics" level="INFO" additivity="false">
        <appender-ref ref="async-statistics" />
    </logger>
    <logger name="org.springframework" level="INFO" />
    <logger name="org.apache.http" level="INFO" />
    <logger name="org.apache.hadoop.hbase" level="ALL" />

    <root level="info">
        <appender-ref ref="async-info" />
        <appender-ref ref="warn" />
        <appender-ref ref="error" />
        <appender-ref ref="STDOUT" />
    </root>
</configuration>